#!/usr/bin/env sh

function terraformNetworking {
  #
  # Wait, why is this needed?
  #
  # Good you asked. I'll let terraform asnwer:
  #
  # Error: Invalid for_each argument
  #
  #  117:   for_each = data.aws_subnet_ids.public.ids
  #
  # The "for_each" value depends on resource attributes that cannot be determined
  # until apply, so Terraform cannot predict how many instances will be created.
  # To work around this, use the -target argument to first apply only the
  # resources that the for_each depends on.
  #
  terraform $cmd \
  -var-file="vars/${environment}.tfvars" \
  -target="module.networking.aws_vpc.nubecita" \
  -target="module.networking.aws_subnet.public" \
  -target="module.networking.aws_subnet.private" \
  -target="module.networking.aws_route_table.public" \
  -target="module.networking.aws_internet_gateway.igw"
}

set -ex

cmd=$1
component=$2
environment=$3

cd "./components/${component}/"

terraform workspace select $environment &
wait $!

case $component in
  "networking")
     # if [ $cmd != "destroy" ]; then
     #   terraformNetworking &
     #   wait $!
     # fi
     ;;
  "eks")
     ;;
  *)
    echo "Unknown component ${component}"
    exit 1
    ;;
esac

terraform ${cmd} -var="environment=${environment}" -var-file="vars/${environment}.tfvars"
